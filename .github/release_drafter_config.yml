name-template: 'v$RESOLVED_VERSION'
tag-template: 'v$RESOLVED_VERSION'

change-template: '- $TITLE (#$NUMBER)'

# Only add to the draft release when a PR has one of these labels
include-labels:
  - 'Type: Major'
  - 'Type: Minor'
  - 'Type: Patch'
  - 'Type: Chore'

# Here is how we determine what version the release would be, by using labels. Eg when "minor" is used, the drafter knows to bump up to a new minor version
version-resolver:
  major:
    labels:
      - 'Type: Major'
  minor:
    labels:
      - 'Type: Minor'
  patch:
    labels:
      - 'Type: Patch'
      - 'Type: Chore' # allow our chore PR's to just be patches too
  default: 'patch'

# What our release will look like. If no draft has been created, then this will be used, otherwise $CHANGES just gets addedd
template: |
  ## Compatibility

  * Requires Deno v<version>
  * Requires Node v<version>

  ## Documentation

  * [Full Documentation](https://drash.land/rhum/v2.x/getting-started/introduction)

  ## Usage

  1. Create a `deps.ts` file.

  ```typescript
  // deps.ts

  export {
    Dummy,
    Fake,
    Mock,
    Spy,
    Stub
  } from "https://deno.land/x/rhum@v$RESOLVED_VERSION/mod.ts";
  ```

  2. Import the test doubles from your `deps.ts` file.

  ```typescript
  import {
    Dummy,
    Fake,
    Mock,
    Spy,
    Stub
  } from "./deps.ts"

  ... your
  ... code
  ... here
  ```

  ## Release Summary

  $CHANGES
  
